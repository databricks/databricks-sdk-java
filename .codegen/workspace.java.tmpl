// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package com.databricks.sdk;

import com.databricks.sdk.client.ApiClient;
import com.databricks.sdk.client.ConfigLoader;
import com.databricks.sdk.client.DatabricksConfig;
{{range .Services}}{{if not .IsAccounts}}
import com.databricks.sdk.service.{{.Package.Name}}.{{.PascalName}}API;
import com.databricks.sdk.service.{{.Package.Name}}.{{.PascalName}}Service;{{end}}{{end}}

/**
 * Entry point for accessing Databricks workspace-level APIs
 */
public class DatabricksWorkspace {
    private final ApiClient apiClient;
    private final DatabricksConfig config;
    {{range .Services}}{{if not .IsAccounts}}
    private {{.PascalName}}Service {{.CamelName}}Service;{{end}}{{end}}

    public DatabricksWorkspace() {
        this(ConfigLoader.getDefault());
    }

    public DatabricksWorkspace(DatabricksConfig config) {
        this.config = config;
        apiClient = new ApiClient(config);
        {{range .Services}}{{if not .IsAccounts}}
        {{.CamelName}}Service = new {{.PascalName}}API(apiClient);{{end}}{{end}}
    }
    {{range .Services}}{{if not .IsAccounts}}
    {{if .Description}}/**
     {{.Comment "     * " 80}}
     */{{end}}
    public {{.PascalName}}Service {{.CamelName}}() {
        return {{.CamelName}}Service;
    }
    {{end}}{{end}}
    {{range .Services}}{{if not .IsAccounts}}
    /**
     * Override {{.PascalName}}Service with mock
     */
    public DatabricksWorkspace set{{.PascalName}}Service({{.PascalName}}Service {{.CamelName}}) {
        {{.CamelName}}Service = {{.CamelName}};
        return this;
    }
    {{end}}{{end}}

    public ApiClient getApiClient() {
        return apiClient;
    }
}
