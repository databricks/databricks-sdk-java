// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.
package com.databricks.sdk.service.{{.Package.Name}};

import java.io.IOException;
import java.util.Collection;
import java.util.Map;

import org.apache.http.client.methods.*;

import com.databricks.sdk.client.ApiClient;
import com.databricks.sdk.client.DatabricksException;

{{if .Description}}/**
 {{.Comment " * " 80}}
 */{{end}}
public class {{.PascalName}}API {
  private final {{.PascalName}}Service impl;

  /** Regular-use constructor */
  public {{.PascalName}}API(ApiClient apiClient) {
    impl = new {{.PascalName}}Impl(apiClient);
  }

  /** Constructor for mocks */
  public {{.PascalName}}API({{.PascalName}}Service mock) {
    impl = mock;
  }
	{{range .Methods}}
	{{if and .Request .Request.RequiredFields}}
  public {{if .Response -}}{{template "type" .Response}}{{else}}void{{end}} {{.CamelName}}{{if .IsNameReserved}}Content{{end}}({{range $i, $p := .Request.RequiredFields -}}
    {{if $i}}, {{end}}{{template "type" .Entity }} {{.CamelName}}{{if .IsNameReserved}}Value{{end}}
  {{- end}}) {
    {{if .Response -}}return {{end}}{{.CamelName}}{{if .IsNameReserved}}Content{{end}}(new {{.Request.PascalName}}(){{range .Request.RequiredFields}}
      .set{{.PascalName}}({{.CamelName}}){{end}});
  }
  {{end}}

	{{if .Description}}/**
   {{.Comment "   * " 80}}
   */{{end}}
  public {{if .Response -}}{{template "type" .Response}}{{else}}void{{end}} {{.CamelName}}{{if .IsNameReserved}}Content{{end}}({{if .Request}}{{template "type" .Request}} request{{end}}) {
    {{if .Response -}}return {{end}}impl.{{.CamelName}}{{if .IsNameReserved}}Content{{end}}({{if .Request}}request{{end}});
  }
  {{end}}
  public {{.PascalName}}Service impl() {
    return impl;
  }
}