// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package com.databricks.sdk;

import com.databricks.sdk.core.ApiClient;
import com.databricks.sdk.core.ConfigLoader;
import com.databricks.sdk.core.DatabricksConfig;
{{range .Services}}{{if .IsAccounts}}
import com.databricks.sdk.service.{{.Package.Name}}.{{.PascalName}}API;
import com.databricks.sdk.service.{{.Package.Name}}.{{.PascalName}}Service;{{end}}{{end}}
import com.databricks.sdk.support.Generated;

/**
 * Entry point for accessing Databricks account-level APIs
 */
@Generated
public class AccountClient {
  private final ApiClient apiClient;
  private final DatabricksConfig config;
  {{range .Services}}{{if .IsAccounts}}
  private {{.PascalName}}API {{(.TrimPrefix "account").CamelName}}API;{{end}}{{end}}

  public AccountClient() {
    this(ConfigLoader.getDefault());
  }

  public AccountClient(DatabricksConfig config) {
    this.config = config;
    apiClient = new ApiClient(config);
    {{range .Services}}{{if .IsAccounts}}
    {{(.TrimPrefix "account").CamelName}}API = new {{.PascalName}}API(apiClient);{{end}}{{end}}
  }

  /** Constructor for mocks */
  public AccountClient(boolean mock) {
    apiClient = null;
    config = null;
  }
  {{range .Services}}{{if .IsAccounts}}
  {{if .Description}}/**
   {{.Comment "   * " 80}}
   */{{end}}
  public {{.PascalName}}API {{(.TrimPrefix "account").CamelName}}() {
    return {{(.TrimPrefix "account").CamelName}}API;
  }
  {{end}}{{end}}
  {{range .Services}}{{if .IsAccounts}}
  /** Replace the default {{.PascalName}}Service with a custom implementation. */
  public AccountClient with{{(.TrimPrefix "account").PascalName}}Impl({{.PascalName}}Service {{.CamelName}}) {
    return this.with{{(.TrimPrefix "account").PascalName}}API(new {{.PascalName}}API({{.CamelName}}));
  }

  /** Replace the default {{.PascalName}}API with a custom implementation. */
  public AccountClient with{{(.TrimPrefix "account").PascalName}}API({{.PascalName}}API {{.CamelName}}) {
    this.{{(.TrimPrefix "account").CamelName}}API = {{.CamelName}};
    return this;
  }
  {{end}}{{end}}
  public ApiClient apiClient() {
    return apiClient;
  }

  public DatabricksConfig config() {
    return config;
  }
}
