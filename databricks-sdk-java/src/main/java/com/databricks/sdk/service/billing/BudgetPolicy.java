// Code generated from OpenAPI specs by Databricks SDK Generator. DO NOT EDIT.

package com.databricks.sdk.service.billing;

import com.databricks.sdk.support.Generated;
import com.databricks.sdk.support.ToStringer;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.io.IOException;
import java.util.Collection;
import java.util.Objects;

/** Contains the BudgetPolicy details. */
@Generated
@JsonSerialize(using = BudgetPolicy.BudgetPolicySerializer.class)
@JsonDeserialize(using = BudgetPolicy.BudgetPolicyDeserializer.class)
public class BudgetPolicy {
  /**
   * List of workspaces that this budget policy will be exclusively bound to. An empty binding
   * implies that this budget policy is open to any workspace in the account.
   */
  private Collection<Long> bindingWorkspaceIds;

  /** A list of tags defined by the customer. At most 20 entries are allowed per policy. */
  private Collection<com.databricks.sdk.service.compute.CustomPolicyTag> customTags;

  /** The Id of the policy. This field is generated by Databricks and globally unique. */
  private String policyId;

  /**
   * The name of the policy. - Must be unique among active policies. - Can contain only characters
   * from the ISO 8859-1 (latin1) set. - Can't start with reserved keywords such as
   * `databricks:default-policy`.
   */
  private String policyName;

  public BudgetPolicy setBindingWorkspaceIds(Collection<Long> bindingWorkspaceIds) {
    this.bindingWorkspaceIds = bindingWorkspaceIds;
    return this;
  }

  public Collection<Long> getBindingWorkspaceIds() {
    return bindingWorkspaceIds;
  }

  public BudgetPolicy setCustomTags(
      Collection<com.databricks.sdk.service.compute.CustomPolicyTag> customTags) {
    this.customTags = customTags;
    return this;
  }

  public Collection<com.databricks.sdk.service.compute.CustomPolicyTag> getCustomTags() {
    return customTags;
  }

  public BudgetPolicy setPolicyId(String policyId) {
    this.policyId = policyId;
    return this;
  }

  public String getPolicyId() {
    return policyId;
  }

  public BudgetPolicy setPolicyName(String policyName) {
    this.policyName = policyName;
    return this;
  }

  public String getPolicyName() {
    return policyName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    BudgetPolicy that = (BudgetPolicy) o;
    return Objects.equals(bindingWorkspaceIds, that.bindingWorkspaceIds)
        && Objects.equals(customTags, that.customTags)
        && Objects.equals(policyId, that.policyId)
        && Objects.equals(policyName, that.policyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bindingWorkspaceIds, customTags, policyId, policyName);
  }

  @Override
  public String toString() {
    return new ToStringer(BudgetPolicy.class)
        .add("bindingWorkspaceIds", bindingWorkspaceIds)
        .add("customTags", customTags)
        .add("policyId", policyId)
        .add("policyName", policyName)
        .toString();
  }

  BudgetPolicyPb toPb() {
    BudgetPolicyPb pb = new BudgetPolicyPb();
    pb.setBindingWorkspaceIds(bindingWorkspaceIds);
    pb.setCustomTags(customTags);
    pb.setPolicyId(policyId);
    pb.setPolicyName(policyName);

    return pb;
  }

  static BudgetPolicy fromPb(BudgetPolicyPb pb) {
    BudgetPolicy model = new BudgetPolicy();
    model.setBindingWorkspaceIds(pb.getBindingWorkspaceIds());
    model.setCustomTags(pb.getCustomTags());
    model.setPolicyId(pb.getPolicyId());
    model.setPolicyName(pb.getPolicyName());

    return model;
  }

  public static class BudgetPolicySerializer extends JsonSerializer<BudgetPolicy> {
    @Override
    public void serialize(BudgetPolicy value, JsonGenerator gen, SerializerProvider provider)
        throws IOException {
      BudgetPolicyPb pb = value.toPb();
      provider.defaultSerializeValue(pb, gen);
    }
  }

  public static class BudgetPolicyDeserializer extends JsonDeserializer<BudgetPolicy> {
    @Override
    public BudgetPolicy deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
      ObjectMapper mapper = (ObjectMapper) p.getCodec();
      BudgetPolicyPb pb = mapper.readValue(p, BudgetPolicyPb.class);
      return BudgetPolicy.fromPb(pb);
    }
  }
}
